[{"C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\index.js":"1","C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\container\\App.js":"2","C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\components\\searchBar.js":"3","C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\components\\videoSynopsis.js":"4","C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\container\\videoList.js":"5","C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\components\\videoCurrent.js":"6","C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\components\\videoItem.js":"7"},{"size":419,"mtime":1612433675875,"results":"8","hashOfConfig":"9"},{"size":4951,"mtime":1613145266927,"results":"10","hashOfConfig":"9"},{"size":936,"mtime":1612870998626,"results":"11","hashOfConfig":"9"},{"size":393,"mtime":1612864491292,"results":"12","hashOfConfig":"9"},{"size":1286,"mtime":1613146188631,"results":"13","hashOfConfig":"9"},{"size":371,"mtime":1613072773199,"results":"14","hashOfConfig":"9"},{"size":1338,"mtime":1613158660220,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vn2e4j",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\index.js",[],["34","35"],"C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\container\\App.js",["36","37","38"],"import axios from 'axios';\r\nimport React from 'react';\r\nimport SearchBar from '../components/searchBar';\r\nimport VideoList from './videoList';\r\nimport VideoSynopsis from \"../components/videoSynopsis\";\r\nimport VideoCurrent from \"../components/videoCurrent\";\r\n\r\nconst API_END_POINT = 'https://api.themoviedb.org/3/';\r\nconst POPULAR_MOVIE_URL = 'discover/movie?language=fr&sort_by=popularity.desc&include_adult=false&append_to_response=images';\r\nconst API_KEY = 'api_key=b1bb009f89a909c0ae0b65bc17104e0e';\r\nconst SEARCH_URL = 'search/movie?language=fr&include_adult=false';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state= {\r\n        movieList: {}, \r\n        currentMovie: {},\r\n        titleList: \"Populaires\",\r\n        previewMovieList: {},\r\n      };\r\n    }\r\n\r\n    componentWillMount(){\r\n      this.getAxiosRes();\r\n    }\r\n\r\n    getAxiosRes() {\r\n      axios.get(`${API_END_POINT}${POPULAR_MOVIE_URL}&${API_KEY}`).then(function(res) {\r\n        this.setState({ \r\n          movieList: res.data.results.slice(1, 7), \r\n          currentMovie: res.data.results[0] }, \r\n          function () {\r\n            // console.log('currentmovie', this.state.currentMovie)\r\n            this.getAxiosVideo();\r\n\r\n          }\r\n        );\r\n      }.bind(this));\r\n    }\r\n\r\n    getAxiosVideo() {\r\n      axios.get(`${API_END_POINT}movie/${this.state.currentMovie.id}?${API_KEY}&append_to_response=videos&include_adult=false`).then(function(response) {\r\n\r\n\r\n        if (response.data.videos && response.data.videos.results[0]){\r\n          const youtubeId = response.data.videos.results[0].key;\r\n          let newCurrentMovie = this.state.currentMovie\r\n          newCurrentMovie.videoId = youtubeId;\r\n          console.log('putin--------');\r\n          this.setState({currentMovie: newCurrentMovie, noVideo:''});\r\n          this.setRecommend();\r\n        }else {\r\n          this.setState({ noVideo: 'Video indisponible !!!'});\r\n        }  \r\n      }.bind(this));   \r\n    }\r\n\r\n    getAxiosPreview() {\r\n      axios.get(`${API_END_POINT}movie/${this.state.previewMovieList.id}?${API_KEY}&append_to_response=videos&include_adult=false`).then(function(response) {\r\n\r\n        if (response.data.videos && response.data.videos.results[0]){\r\n          const youtubeId = response.data.videos.results[0].key;\r\n          let newCurrentMovie = this.state.previewMovieList;\r\n          newCurrentMovie.videoId = youtubeId;\r\n          this.setState({previewMovieList: newCurrentMovie, noVideo:''});\r\n        }else {\r\n          this.setState({ noVideo: 'Video indisponible !!!'});\r\n        }  \r\n      }.bind(this));   \r\n    }\r\n    \r\n    onClickListItem(movie) {\r\n      // console.log('---click app---', movie);\r\n      this.setState({currentMovie: movie}, () => {this.getAxiosVideo();})\r\n      this.setState({titleList: \"RecommandÃ©s\"})\r\n    }\r\n\r\n    onMouseHoverListItem(preview){\r\n      this.setState({previewMovieList: preview}, () => {\r\n        this.getAxiosPreview();\r\n        console.log('toto--------', this.state.previewMovieList);\r\n      })\r\n    }\r\n\r\n    getTextSearch(textSearch) {\r\n      axios.get(`${API_END_POINT}${SEARCH_URL}&${API_KEY}&query=${textSearch}`).then(function(reponse){\r\n        if (reponse.data && reponse.data.results[0]) {\r\n          if (reponse.data.results[0].id != this.state.currentMovie.id){\r\n            this.setState({ currentMovie: reponse.data.results[0] }, () => {\r\n              this.getAxiosVideo();\r\n              this.setRecommend();\r\n            })\r\n          }        \r\n        };\r\n      }.bind(this))\r\n    }\r\n\r\n    setRecommend() {\r\n      axios.get(`${API_END_POINT}movie/${this.state.currentMovie.id}/recommendations?${API_KEY}&language=fr`).then(function(reponse){\r\n        this.setState({ movieList: reponse.data.results.slice(0, 6)});\r\n      }.bind(this));\r\n    }\r\n\r\n    render() {\r\n\r\n      const renderMovieList = () => {\r\n        if (this.state.movieList.length >= 6) {\r\n          return  <VideoList previewVideo={this.state.previewMovieList} preview={this.onMouseHoverListItem.bind(this)} movieList={this.state.movieList} callBack={this.onClickListItem.bind(this)} title={this.state.titleList} />\r\n        }\r\n      }\r\n\r\n      const renderNoVideo = () => {\r\n        if (this.state.noVideo != ''){\r\n          return <h1 className=\"novideo\">{this.state.noVideo}</h1>\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div className=\"main\">\r\n          <img src=\"https://www.serieously.com/wp-content/uploads/2019/04/netflixlogo.png\" className=\"justify-center logo\" />\r\n          <SearchBar callBack={this.getTextSearch.bind(this)} />\r\n          <VideoCurrent videoId={this.state.currentMovie.videoId} />\r\n          {renderNoVideo()}\r\n          <VideoSynopsis title={this.state.currentMovie.title} overview={this.state.currentMovie.overview} release_date={this.state.currentMovie.release_date} />\r\n          {renderMovieList()}        \r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App; ","C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\components\\searchBar.js",[],"C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\components\\videoSynopsis.js",[],"C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\container\\videoList.js",[],"C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\components\\videoCurrent.js",["39"],"import React from 'react'\r\n\r\nconst YOUTUBE_URL = 'https://www.youtube.com/embed/'\r\n\r\nconst VideoCurrent = (props) =>{\r\n    const videoId = props.videoId;\r\n    // console.log('--current vid--', videoId)\r\n    return(\r\n        <div className=\"videocurrent\">\r\n            <iframe src={`${YOUTUBE_URL}${videoId}`} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoCurrent;\r\n","C:\\Users\\Kevin\\Documents\\Dev\\MyNetflix\\my-netflix\\src\\components\\videoItem.js",["40"],"import React, { useState } from 'react';\r\n\r\nconst YOUTUBE_URL = 'https://www.youtube.com/embed/'\r\nconst IMG_URL = 'https://image.tmdb.org/t/p/w300';\r\n\r\nconst VideoItem = (props) => {\r\n    const movie = props.movie;\r\n    const previewVideo = props.previewVideo;\r\n    const [hover, setHover] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        {!hover \r\n            ?<div \r\n                className=\"videoitem\" \r\n                onClick={handleClick}\r\n                onMouseEnter={handleMouseEnter}\r\n                \r\n            >\r\n                <li>\r\n                    {movie.title}\r\n                </li>\r\n                <img src={`${IMG_URL}${movie.poster_path}`} alt=\"poster_path\"/>\r\n            </div> \r\n            :\r\n            <div className=\"videoiframe\" onMouseLeave={handleLeaveMouse}>\r\n                <p onClick={handleClick}>Voir dans le lecteur</p>\r\n                <iframe src={`${YOUTUBE_URL}${previewVideo.videoId}`} />\r\n            </div>  \r\n        }\r\n        </>\r\n    )\r\n\r\n    function handleClick() {\r\n\r\n        props.callBack(movie)\r\n    }\r\n \r\n    function handleMouseEnter(){\r\n        setTimeout(() =>\r\n        setHover(true), 500);\r\n        props.preview(movie)\r\n    }\r\n\r\n    function handleLeaveMouse() {\r\n        setTimeout(() =>\r\n        setHover(false), 400);\r\n    }\r\n}\r\n\r\nexport default VideoItem;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":90,"column":42,"nodeType":"47","messageId":"48","endLine":90,"endColumn":44},{"ruleId":"45","severity":1,"message":"46","line":115,"column":32,"nodeType":"47","messageId":"48","endLine":115,"endColumn":34},{"ruleId":"49","severity":1,"message":"50","line":122,"column":11,"nodeType":"51","endLine":122,"endColumn":126},{"ruleId":"52","severity":1,"message":"53","line":10,"column":13,"nodeType":"51","endLine":10,"endColumn":56},{"ruleId":"52","severity":1,"message":"53","line":28,"column":17,"nodeType":"51","endLine":28,"endColumn":73},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]